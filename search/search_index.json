{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to DrLiptons projects page Please feel free to browse around. What's new February 17, 2022 Password Manager Stock Trading News Alert Project Updates Web scraping beautifulsoup # working in progress selina # working in progress tk gui stock monitor # working in progress ... # for more projects see ...","title":"Home"},{"location":"#welcome-to-drliptons-projects-page","text":"Please feel free to browse around.","title":"Welcome to DrLiptons projects page"},{"location":"#whats-new","text":"","title":"What's new"},{"location":"#february-17-2022","text":"Password Manager Stock Trading News Alert","title":"February 17, 2022"},{"location":"#project-updates","text":"Web scraping beautifulsoup # working in progress selina # working in progress tk gui stock monitor # working in progress ... # for more projects see ...","title":"Project Updates"},{"location":"blog/","text":"Blog Blog Title Sub title \ud83d\uddd3 Month Date, Year | \u23f1 10 min read Content text \u2192 Continue reading","title":"Blog"},{"location":"blog/#blog","text":"","title":"Blog"},{"location":"blog/#blog-title","text":"Sub title \ud83d\uddd3 Month Date, Year | \u23f1 10 min read Content text \u2192 Continue reading","title":"Blog Title"},{"location":"project-list/","text":"Overview Python projects Password Manager Text2MorseCode Plant Disease Detection C# projects Working in progress ... Miscellaneous Working in progress ...","title":"Overview"},{"location":"project-list/#overview","text":"","title":"Overview"},{"location":"project-list/#python-projects","text":"Password Manager Text2MorseCode Plant Disease Detection","title":"Python projects"},{"location":"project-list/#c-projects","text":"Working in progress ...","title":"C# projects"},{"location":"project-list/#miscellaneous","text":"Working in progress ...","title":"Miscellaneous"},{"location":"projects/password-manager/","text":"Password Manager Information Password Manager is a simple password generator application. The application can generate a random password that contain letters, numbers and symbols. The length of the password can vary between 12 and 18 symbols. Users can save their generated username and password in the application and search for it later. Repository: Password Manager Features Generate random password Save password Recall saved password GUI with tkinter Logo Change Log 17.02.2022: Commit project","title":"Password Manager"},{"location":"projects/password-manager/#password-manager","text":"","title":"Password Manager"},{"location":"projects/password-manager/#information","text":"Password Manager is a simple password generator application. The application can generate a random password that contain letters, numbers and symbols. The length of the password can vary between 12 and 18 symbols. Users can save their generated username and password in the application and search for it later. Repository: Password Manager","title":"Information"},{"location":"projects/password-manager/#features","text":"Generate random password Save password Recall saved password GUI with tkinter Logo","title":"Features"},{"location":"projects/password-manager/#change-log","text":"17.02.2022: Commit project","title":"Change Log"},{"location":"projects/plant-disease-detection/","text":"Plant Disease Detection Information This is my first project of a multi-part documented project. The project involved creating a machine learning model with TensorFlow and integrate the model into a GUI application. The application is a user-friendly application with a few simply, easy to use function. Users can browse a picture from their local machine for the model to detect and print out the probability of its healthiness. Resources: Part 1 - Create a machine learning model : a step-by-step documented procedure to create a machine learning model with TensorFlow, and save and load it for using it on a GUI application. Part 2 - Create a desktop application : a detailed documentation of creating a GUI application and how integrate a machine learning model create from part 1 into the application Part 3 - Make an executable application a step-by-step how to convert a finished project of source code into an executable application Features Part 1 - Create a machine learning model Download a dataset onto the cloud hosted notebook Inspect the downloaded data Prepare the dataset by using data augmentation Create and train a model using simple convolutional neural network Create and train a transferred learning model Save and load the finished model Compare machine learning models Make predictions with random images Part 2 - Create a desktop application Create a GUI with tkinter Browser an image from a local machine Show an image preview Use a ml model to predict its healthiness probability Part 3 - Make an executable application Make an .exe file using pyinstaller Change Log 17.02.2022: Commit project","title":"Plant Disease Detection"},{"location":"projects/plant-disease-detection/#plant-disease-detection","text":"","title":"Plant Disease Detection"},{"location":"projects/plant-disease-detection/#information","text":"This is my first project of a multi-part documented project. The project involved creating a machine learning model with TensorFlow and integrate the model into a GUI application. The application is a user-friendly application with a few simply, easy to use function. Users can browse a picture from their local machine for the model to detect and print out the probability of its healthiness. Resources: Part 1 - Create a machine learning model : a step-by-step documented procedure to create a machine learning model with TensorFlow, and save and load it for using it on a GUI application. Part 2 - Create a desktop application : a detailed documentation of creating a GUI application and how integrate a machine learning model create from part 1 into the application Part 3 - Make an executable application a step-by-step how to convert a finished project of source code into an executable application","title":"Information"},{"location":"projects/plant-disease-detection/#features","text":"Part 1 - Create a machine learning model Download a dataset onto the cloud hosted notebook Inspect the downloaded data Prepare the dataset by using data augmentation Create and train a model using simple convolutional neural network Create and train a transferred learning model Save and load the finished model Compare machine learning models Make predictions with random images Part 2 - Create a desktop application Create a GUI with tkinter Browser an image from a local machine Show an image preview Use a ml model to predict its healthiness probability Part 3 - Make an executable application Make an .exe file using pyinstaller","title":"Features"},{"location":"projects/plant-disease-detection/#change-log","text":"17.02.2022: Commit project","title":"Change Log"},{"location":"projects/text-2-morse-code/","text":"Text 2 Morse Code Information A funny little side project to translate text into morse code. The program can convert alphabets, numbers, and a few symbols in to morse code. As a final result the converted morse code text will be shown on the console and a sound illustration will be played for each text. Repository: Text2MorseCode Features User input through console Convert alphabets (a - z), numbers (0 - 9), and symbols (. , ? ! - / @ ( )) into morse code Play a sound for each converted text Change Log 17.02.2022: Commit project","title":"Text2MorseCode"},{"location":"projects/text-2-morse-code/#text-2-morse-code","text":"","title":"Text 2 Morse Code"},{"location":"projects/text-2-morse-code/#information","text":"A funny little side project to translate text into morse code. The program can convert alphabets, numbers, and a few symbols in to morse code. As a final result the converted morse code text will be shown on the console and a sound illustration will be played for each text. Repository: Text2MorseCode","title":"Information"},{"location":"projects/text-2-morse-code/#features","text":"User input through console Convert alphabets (a - z), numbers (0 - 9), and symbols (. , ? ! - / @ ( )) into morse code Play a sound for each converted text","title":"Features"},{"location":"projects/text-2-morse-code/#change-log","text":"17.02.2022: Commit project","title":"Change Log"}]}